// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     Int       @id @default(autoincrement())
  email                  String    @unique
  googleId               String    @unique
  googleProfilePicture   String    @unique
  created_at             DateTime? @default(now())
  images_last_updated_at DateTime? @db.Timestamptz(3)
  Images                 Images[]
  Album                  Album[]
}

model Images {
  id                   Int       @id @default(autoincrement())
  googleId             String    @unique
  user                 User      @relation(fields: [userId], references: [id])
  userId               Int
  baseUrl              String?   @unique
  baseUrl_last_updated DateTime? @db.Timestamptz(3)
  productUrl           String?   @unique
  created_at           DateTime
  updated_at           DateTime? @db.Timestamptz(3)
  album                Album?    @relation(fields: [sorted_album_id], references: [id])
  sorted_album_id      Int?
  sorted_status        String?
  actually_deleted     DateTime? @db.Timestamptz(3)
}

model Album {
  id         Int       @id @default(autoincrement())
  user       User      @relation(fields: [userId], references: [id])
  userId     Int
  created_at DateTime? @default(now()) @db.Timestamptz(3)
  title      String    @unique
  Images     Images[]
}
