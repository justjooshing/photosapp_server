// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id                     Int          @id @default(autoincrement())
  email                  String       @unique
  googleId               String       @unique
  googleProfilePicture   String       @unique
  created_at             DateTime?    @default(now())
  images_last_updated_at DateTime?    @db.Timestamptz(3)
  images                 images[]
  album                  album[]
  image_sets             image_sets[]

  @@map("User")
}

model images {
  id                   Int         @id @default(autoincrement())
  googleId             String      @unique
  mime_type            String?
  user                 user        @relation(fields: [userId], references: [id])
  userId               Int
  baseUrl              String?     @unique
  baseUrl_last_updated DateTime?   @db.Timestamptz(3)
  productUrl           String?     @unique
  created_at           DateTime
  updated_at           DateTime?   @db.Timestamptz(3)
  album                album?      @relation(fields: [sorted_album_id], references: [id])
  sorted_album_id      Int?
  sorted_status        String?
  actually_deleted     DateTime?   @db.Timestamptz(3)
  image_set            image_sets? @relation(fields: [image_set_id], references: [id])
  image_set_id         Int?
  size                 String?

  @@map("Images")
}

model image_sets {
  id                 Int      @id @default(autoincrement())
  minute             DateTime
  user               user     @relation(fields: [userId], references: [id])
  userId             Int
  unsorted_image_ids Int[]
  sorted_image_ids   Int[]
  images             images[]

  @@map("Image_Sets")
}

model album {
  id         Int       @id @default(autoincrement())
  user       user      @relation(fields: [userId], references: [id])
  userId     Int
  created_at DateTime? @default(now()) @db.Timestamptz(3)
  title      String
  images     images[]

  @@unique([userId, title])
  @@map("Album")
}
